# -*- coding: utf-8 -*-
"""IRIS FLOWER CLASSIFICATION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Dz7297J4osOwUrYSVK393fDsZcAl6AVH

# ***Iris Flower Classification - CodSoft Internship â€“ Task 3***

# Import necessary libraries
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
import joblib

"""#Load Dataset

"""

df = pd.read_csv("IRIS.csv")  # Update the path if needed
print("Dataset loaded successfully.")
print(df.head())

"""#Check for null values"""

print("\nMissing values:\n", df.isnull().sum())

"""#  Exploratory Data Analysis"""

sns.pairplot(df, hue="species")
plt.title("Pairplot of Iris Features")
plt.savefig("pairplot.png")
plt.show()

from google.colab import files
files.download("pairplot.png")

sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.savefig("correlation_heatmap.png")
plt.show()

from google.colab import files
files.download("correlation_heatmap.png")

"""#  Preprocessing"""

X = df.drop(['species'], axis=1)
y = df['species']

"""# Encode species labels"""

le = LabelEncoder()
y_encoded = le.fit_transform(y)

"""# Split the data

"""

X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2, random_state=42)

"""#  Model Training"""

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
print("\nModel trained successfully.")

"""#Predictions"""

y_pred = model.predict(X_test)

"""#  Evaluation

"""

print("\nAccuracy Score:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))

"""# Save the mode"""

joblib.dump(model, 'iris_model.pkl')
print("\nModel saved as 'iris_model.pkl'")